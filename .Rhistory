find.package("devtools")
install.packages("devtools")
library(devtools)
find_rtools()
install.packages("KernSmooth")
library(KernSmooth)
find.package("devtools")
library(devtools)
find_rtools()
install.packages(“RMySQL”, type = “source”)
install.packages("RMySQL", type = "source")
install.packages("RMySQL", type = "source")
install.packages("RMySQL", type = "source")
install.packages("RMySQL", type = "source")
install.packages("RMySQL", type = "source")
install.packages("RMySQL", type = "source")
install.packages("RMySQL", type = "source")
local({pkg <- select.list(sort(.packages(all.available = TRUE)),graphics=TRUE)
if(nchar(pkg)) library(pkg, character.only=TRUE)})
utils:::menuInstallLocal()
install.packages("RMySQL", type = "source")
utils:::menuInstallLocal()
utils:::menuInstallPkgs()
install.packages("RMySQL", type = "source")
utils:::menuInstallLocal()
utils:::menuInstallLocal()
install.packages("RMySQL", type = "source")
utils:::menuInstallPkgs()
local({pkg <- select.list(sort(.packages(all.available = TRUE)),graphics=TRUE)
if(nchar(pkg)) library(pkg, character.only=TRUE)})
install.packages("RMySQL")
devtools::install_github("RcppCore/Rcpp")
devtools::install_github("rstats-db/DBI")
devtools::install_github("rstats-db/RMySQL")
ucscDb <- dbConnect(MySQL(),user="genome", hot="genome-mysql.cse.ucsc.edu")
load(RMySQL)
mysql --user=genome --host=genome-mysql.cse.ucsc.edu -A
q()
swirl()
install.packages("swirl")
library(swirl)
swirl()
install_from_swirl("Getting and Cleaning Data")
swirl()
library(dplyr)
cran<-tbl_df(mydf)
rm(mydf)
rm("mydf")
cran
?group_by
by_package<-group_by(cran,package)
by_package
summarize(by_package,mean(size))
?n
?n_district
?n_distinct
submit()
pack_sum
quantile(pack_sum$count, probs=0.99)
top_counts<-filter(pack_sum,count>679)
top_counts
View(top_counts)
top_counts_sorted<-arrange(top_counts,count)
top_counts_sorted<-arrange(top_counts,desc(count)
)
View(top_counts_sorted)
quantile(pack_sum$unique, probs=0.99)
top_unique<-filter(pack_sum,unique>465)
View(top_unique)
top_unique_sorted<-arrange(top_unique,desc(unique))
View(top_unique_sorted)
submit()
submit()
?chain
submit()
View(result3)
submit()
submit()
submit
submit()
submit()
submit()
submit()
library(tidyr)
students
?gather
gather(students,sex,count,-grade)
students2
res=gather(students2,sex_class,count)
res=gather(students2,sex_class,count,-grade)
res<-=gather(students2,sex_class,count,-grade)
res<-gather(students2,sex_class,count,-grade)
res
?separate
separate(res,sex_class,c("sex","class"))
submit()
students3
?gather
submit()
?spread
submit()
submit()
submit()
submit()
extract_numeric("class5")
extract_numeric("class5")
submit()
students4
submit()
submit()
submit()
?passed
passed
failed
passed<-mutate(passed,status="passed")
failed<-mutate(failed,status="failed")
bind_rows(passed,failed)
sat
?select
submit()
submit()
submit()
Sys.getlocale("LC_TIME")
library(lubridate)
help(package=lubridate)
this_day<-today()
this_day
year(this_day)
wday(this_day)
wday(this_day,label = TRUE)
0
quit()
library(swirl)
rm(list=ls())
install_from_swirl("Exploratory Data Analysis")
install_from_swirl("Exploratory Data Analysis")
swirl()
now()
this_moment<-now()
this_moment
week(this_moment)
hour(this_moment)
my_date<-ymd("1989-05-17")
my_date
class(my_date)
ymd("1989 May 17")
mdy("March 12, 1975")
dmy(25081985)
ymd("192012")
ymd("1920/1/2")
dt1
ymd_hms(dt1)
hms("03:22:14")
install_from_swirl("Exploratory Data Analysis")
dt2
ymd(dt2)
update(this_moment, hours=8,minutes=34,seconds=55)
this_moment
this_moment<-update(this_moment,hours=3,minutes=39)
this_moment
nyc<-now("America/New_York")
nyc
install_from_swirl("Exploratory Data Analysis")
depart<-nyc+days(2)
depart
depart<-update(depart,hous=17,minutes=34)
depart<-update(depart,hours=17,minutes=34)
depart
arrive<-depart+hours(15)+minutes(50)
?with_tz
with_tz(arrive,"Asia/Hong_Kong")
arrive<-with_tz(arrive,"Asia/Hong_Kong")
arrive
last_time<-mdy("June 17,2008",tz="Singapore")
last_time<-mdy("June 17, 2008",tz="Singapore")
play()
last_time<-mdy("June 17,2008",tz="Singapore")
last_time
nxt()
last_time
?new_interval
play()
this_moment
this_moment - last_time
a<-this_moment - last_time
a
minutes(a)
class(a)
as.Date(a)
as.integer(a)
as.numeric(a)
nxt()
how_long<-new_interval(last_time,arrive)
as.period(how_long)
stopwatch()
swirl()
install.packages("lattice")
library(ggplot2)
library(grDevices)
ls()
x=1:300
e<-rnorm(300,5,10)
y<-0.5*x+e
plot(x,y)
e<-rnorm(300,100,10)
y<-0.5*x+e
plot(x,y)
plot(e)
?abline
abline(h=100)
plot(e-100)
plot(e)
plot(e-100)
plot(100-e)
clear()
hist(e)
hist(e,nbin=30)
?hist
hist(e,breaks=30)
hist(e,breaks=70:20:200)
hist(e,breaks=70:50:200)
hist(e,breaks=70:200)
hist(e,breaks=20)
hist(e,breaks=10)
color()
colors()
hist(e,breaks=10,col = "salmon")
par(bg="tomato")
par(bg="tomato1")
par(col="tomato1")
par(mar=12px)
par(mar=12)
par("bg")
title(x="jkeflkemf")
title(x="----------------------------")
library(swirl)
rm(list=ls())
swirl()
p <- c(.1, .2, .3, .4)
x <- 2 : 5
xx<-x^2
u<-x*p
v<-(p*xx)-u^2
v<-(p*xx)-sum(u)^2
sum(v)
sum(u)
v<-p*xx
v
v-sum(u)
v-sum(u)^2
x1<-(x-sum(u))^2
x1
v<-p*x1
v
sum(v)
x <- 1:4
p <- x/sum(x)
x*p
sum(x*p)
setwd("~/GitHub/rep-r-project1")
activity<-read.csv("activity.csv")
str(activity)
sum(is.na(activity$steps))/length(activity$steps)
dir<-getwd()
dir
split(activity,date)
with(activity,unique(date))
with(activity,split(date))
with(activity,split(activitydate))
with(activity,split(activity,date))
?tapply
mean_per_day<-tapply(activity,activity$date,mean(rm.na=TRUE))
mean_per_day<-tapply(activity,activity$date,function{x} mean(x,rm.na=TRUE))
mean_per_day<-tapply(activity,activity$date,function(x) mean(x,rm.na=TRUE))
str(activity)
mean_per_day<-tapply(activity,activity$date,mean(na.rm=TRUE))
mean_per_day<-tapply(activity,activity$date,mean,na.rm=TRUE)
mean_per_day<-tapply(activity,activity$date,mean)
mean_per_day<-tapply(activity$steps,activity$date,mean)
mean_per_day<-tapply(activity$steps,activity$date,mean,na.rm=TRUE)
day1<-activity$steps[activity$date=="2012-10-02"]
head(activity$steps)
day1<-activity[activity$date=="2012-10-02"]
day1<-activity$steps[activity$date=="2012-10-02",]
day1<-activity[activity$date=="2012-10-02",]
head(day1)
tail(day1)
24*60/5
24*60
total_per_day<-tapply(activity$steps,activity$date,sum)
days<-levels(activity$date)
hist(total_per_day)
?hist
hist(total_per_day,10)
hist(total_per_day,20)
hist(total_per_day,30)
hist(total_per_day,40)
hist(total_per_day,15)
hist(total_per_day,18)
hist(total_per_day,16)
hist(total_per_day,18)
hist(total_per_day,16)
hist(total_per_day,15)
mean(total_per_day)
mean(total_per_day,na.rm=TRUE)
std(total_per_day)
??standard deviation
??standarddeviation
sd(total_per_day)
sd(total_per_day,na.rm = TRUE)
median(total_per_day)
median(total_per_day,na.rm = )
median(total_per_day,na.rm = TRUE)
mean(total_per_day,na.rm = TRUE)
a<-lm(hist(total_per_day))
a<-hist(total_per_day,15)
a
hist(total_per_day,"FD")
a<-hist(total_per_day,"FD")
length(a$counts)
a<-hist(total_per_day,15)
length(a$counts)
a<-hist(total_per_day,breaks=15)
length(a$counts)
a<-hist(total_per_day)
length(a$counts)
setwd("~/GitHub/RepData_PeerAssessment1")
total_per_day<-tapply(activity$steps,activity$date,sum)
mean_total<-round(mean(total_per_day,na.rm=TRUE),digits=2)
mean_total
